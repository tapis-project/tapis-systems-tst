/*
 * This file is generated by jOOQ.
 */
package edu.utexas.tacc.tapis.systems.gen.jooq.tables.records;


import edu.utexas.tacc.tapis.systems.gen.jooq.tables.LogicalQueues;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogicalQueuesRecord extends UpdatableRecordImpl<LogicalQueuesRecord> implements Record10<Integer, Integer, String, String, Integer, Integer, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1217893000;

    /**
     * Setter for <code>tapis_sys.logical_queues.seq_id</code>. Logical queue sequence id
     */
    public void setSeqId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>tapis_sys.logical_queues.seq_id</code>. Logical queue sequence id
     */
    public Integer getSeqId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>tapis_sys.logical_queues.system_seq_id</code>. Sequence id of system associated with the logical queue
     */
    public void setSystemSeqId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>tapis_sys.logical_queues.system_seq_id</code>. Sequence id of system associated with the logical queue
     */
    public Integer getSystemSeqId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>tapis_sys.logical_queues.name</code>. Name of logical queue
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>tapis_sys.logical_queues.name</code>. Name of logical queue
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>tapis_sys.logical_queues.hpc_queue_name</code>. Name of the associated hpc queue
     */
    public void setHpcQueueName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>tapis_sys.logical_queues.hpc_queue_name</code>. Name of the associated hpc queue
     */
    public String getHpcQueueName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>tapis_sys.logical_queues.max_jobs</code>. Maximum total number of jobs that can be queued or running in this queue at a given time.
     */
    public void setMaxJobs(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>tapis_sys.logical_queues.max_jobs</code>. Maximum total number of jobs that can be queued or running in this queue at a given time.
     */
    public Integer getMaxJobs() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>tapis_sys.logical_queues.max_jobs_per_user</code>. Maximum number of jobs associated with a specific user that can be queued or running in this queue at a given time.
     */
    public void setMaxJobsPerUser(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>tapis_sys.logical_queues.max_jobs_per_user</code>. Maximum number of jobs associated with a specific user that can be queued or running in this queue at a given time.
     */
    public Integer getMaxJobsPerUser() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>tapis_sys.logical_queues.max_node_count</code>. Maximum number of nodes that can be requested when submitting a job to the queue.
     */
    public void setMaxNodeCount(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>tapis_sys.logical_queues.max_node_count</code>. Maximum number of nodes that can be requested when submitting a job to the queue.
     */
    public Integer getMaxNodeCount() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>tapis_sys.logical_queues.max_cores_per_node</code>. Maximum number of cores per node that can be requested when submitting a job to the queue.
     */
    public void setMaxCoresPerNode(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>tapis_sys.logical_queues.max_cores_per_node</code>. Maximum number of cores per node that can be requested when submitting a job to the queue.
     */
    public Integer getMaxCoresPerNode() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>tapis_sys.logical_queues.max_memory_mb</code>. Maximum memory in megabytes that can be requested when submitting a job to the queue.
     */
    public void setMaxMemoryMb(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>tapis_sys.logical_queues.max_memory_mb</code>. Maximum memory in megabytes that can be requested when submitting a job to the queue.
     */
    public Integer getMaxMemoryMb() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>tapis_sys.logical_queues.max_minutes</code>. Maximum run time in minutes that can be requested when submitting a job to the queue.
     */
    public void setMaxMinutes(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>tapis_sys.logical_queues.max_minutes</code>. Maximum run time in minutes that can be requested when submitting a job to the queue.
     */
    public Integer getMaxMinutes() {
        return (Integer) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, Integer, String, String, Integer, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, Integer, String, String, Integer, Integer, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return LogicalQueues.LOGICAL_QUEUES.SEQ_ID;
    }

    @Override
    public Field<Integer> field2() {
        return LogicalQueues.LOGICAL_QUEUES.SYSTEM_SEQ_ID;
    }

    @Override
    public Field<String> field3() {
        return LogicalQueues.LOGICAL_QUEUES.NAME;
    }

    @Override
    public Field<String> field4() {
        return LogicalQueues.LOGICAL_QUEUES.HPC_QUEUE_NAME;
    }

    @Override
    public Field<Integer> field5() {
        return LogicalQueues.LOGICAL_QUEUES.MAX_JOBS;
    }

    @Override
    public Field<Integer> field6() {
        return LogicalQueues.LOGICAL_QUEUES.MAX_JOBS_PER_USER;
    }

    @Override
    public Field<Integer> field7() {
        return LogicalQueues.LOGICAL_QUEUES.MAX_NODE_COUNT;
    }

    @Override
    public Field<Integer> field8() {
        return LogicalQueues.LOGICAL_QUEUES.MAX_CORES_PER_NODE;
    }

    @Override
    public Field<Integer> field9() {
        return LogicalQueues.LOGICAL_QUEUES.MAX_MEMORY_MB;
    }

    @Override
    public Field<Integer> field10() {
        return LogicalQueues.LOGICAL_QUEUES.MAX_MINUTES;
    }

    @Override
    public Integer component1() {
        return getSeqId();
    }

    @Override
    public Integer component2() {
        return getSystemSeqId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getHpcQueueName();
    }

    @Override
    public Integer component5() {
        return getMaxJobs();
    }

    @Override
    public Integer component6() {
        return getMaxJobsPerUser();
    }

    @Override
    public Integer component7() {
        return getMaxNodeCount();
    }

    @Override
    public Integer component8() {
        return getMaxCoresPerNode();
    }

    @Override
    public Integer component9() {
        return getMaxMemoryMb();
    }

    @Override
    public Integer component10() {
        return getMaxMinutes();
    }

    @Override
    public Integer value1() {
        return getSeqId();
    }

    @Override
    public Integer value2() {
        return getSystemSeqId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getHpcQueueName();
    }

    @Override
    public Integer value5() {
        return getMaxJobs();
    }

    @Override
    public Integer value6() {
        return getMaxJobsPerUser();
    }

    @Override
    public Integer value7() {
        return getMaxNodeCount();
    }

    @Override
    public Integer value8() {
        return getMaxCoresPerNode();
    }

    @Override
    public Integer value9() {
        return getMaxMemoryMb();
    }

    @Override
    public Integer value10() {
        return getMaxMinutes();
    }

    @Override
    public LogicalQueuesRecord value1(Integer value) {
        setSeqId(value);
        return this;
    }

    @Override
    public LogicalQueuesRecord value2(Integer value) {
        setSystemSeqId(value);
        return this;
    }

    @Override
    public LogicalQueuesRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public LogicalQueuesRecord value4(String value) {
        setHpcQueueName(value);
        return this;
    }

    @Override
    public LogicalQueuesRecord value5(Integer value) {
        setMaxJobs(value);
        return this;
    }

    @Override
    public LogicalQueuesRecord value6(Integer value) {
        setMaxJobsPerUser(value);
        return this;
    }

    @Override
    public LogicalQueuesRecord value7(Integer value) {
        setMaxNodeCount(value);
        return this;
    }

    @Override
    public LogicalQueuesRecord value8(Integer value) {
        setMaxCoresPerNode(value);
        return this;
    }

    @Override
    public LogicalQueuesRecord value9(Integer value) {
        setMaxMemoryMb(value);
        return this;
    }

    @Override
    public LogicalQueuesRecord value10(Integer value) {
        setMaxMinutes(value);
        return this;
    }

    @Override
    public LogicalQueuesRecord values(Integer value1, Integer value2, String value3, String value4, Integer value5, Integer value6, Integer value7, Integer value8, Integer value9, Integer value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LogicalQueuesRecord
     */
    public LogicalQueuesRecord() {
        super(LogicalQueues.LOGICAL_QUEUES);
    }

    /**
     * Create a detached, initialised LogicalQueuesRecord
     */
    public LogicalQueuesRecord(Integer seqId, Integer systemSeqId, String name, String hpcQueueName, Integer maxJobs, Integer maxJobsPerUser, Integer maxNodeCount, Integer maxCoresPerNode, Integer maxMemoryMb, Integer maxMinutes) {
        super(LogicalQueues.LOGICAL_QUEUES);

        set(0, seqId);
        set(1, systemSeqId);
        set(2, name);
        set(3, hpcQueueName);
        set(4, maxJobs);
        set(5, maxJobsPerUser);
        set(6, maxNodeCount);
        set(7, maxCoresPerNode);
        set(8, maxMemoryMb);
        set(9, maxMinutes);
    }
}
