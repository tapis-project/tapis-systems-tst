/*
 * This file is generated by jOOQ.
 */
package edu.utexas.tacc.tapis.systems.gen.jooq.tables;


import edu.utexas.tacc.tapis.systems.gen.jooq.Keys;
import edu.utexas.tacc.tapis.systems.gen.jooq.TapisSys;
import edu.utexas.tacc.tapis.systems.gen.jooq.tables.records.JobRuntimesRecord;
import edu.utexas.tacc.tapis.systems.model.JobRuntime.RuntimeType;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JobRuntimes extends TableImpl<JobRuntimesRecord> {

    private static final long serialVersionUID = -1770857074;

    /**
     * The reference instance of <code>tapis_sys.job_runtimes</code>
     */
    public static final JobRuntimes JOB_RUNTIMES = new JobRuntimes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JobRuntimesRecord> getRecordType() {
        return JobRuntimesRecord.class;
    }

    /**
     * The column <code>tapis_sys.job_runtimes.seq_id</code>.
     */
    public final TableField<JobRuntimesRecord, Integer> SEQ_ID = createField(DSL.name("seq_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('job_runtimes_seq_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>tapis_sys.job_runtimes.system_seq_id</code>.
     */
    public final TableField<JobRuntimesRecord, Integer> SYSTEM_SEQ_ID = createField(DSL.name("system_seq_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>tapis_sys.job_runtimes.runtime_type</code>.
     */
    public final TableField<JobRuntimesRecord, RuntimeType> RUNTIME_TYPE = createField(DSL.name("runtime_type"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false).asEnumDataType(edu.utexas.tacc.tapis.systems.gen.jooq.enums.JobRuntimeType.class), this, "", new org.jooq.impl.EnumConverter<edu.utexas.tacc.tapis.systems.gen.jooq.enums.JobRuntimeType, edu.utexas.tacc.tapis.systems.model.JobRuntime.RuntimeType>(edu.utexas.tacc.tapis.systems.gen.jooq.enums.JobRuntimeType.class, edu.utexas.tacc.tapis.systems.model.JobRuntime.RuntimeType.class));

    /**
     * The column <code>tapis_sys.job_runtimes.version</code>.
     */
    public final TableField<JobRuntimesRecord, String> VERSION = createField(DSL.name("version"), org.jooq.impl.SQLDataType.CLOB.nullable(false).defaultValue(org.jooq.impl.DSL.field("''::text", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * Create a <code>tapis_sys.job_runtimes</code> table reference
     */
    public JobRuntimes() {
        this(DSL.name("job_runtimes"), null);
    }

    /**
     * Create an aliased <code>tapis_sys.job_runtimes</code> table reference
     */
    public JobRuntimes(String alias) {
        this(DSL.name(alias), JOB_RUNTIMES);
    }

    /**
     * Create an aliased <code>tapis_sys.job_runtimes</code> table reference
     */
    public JobRuntimes(Name alias) {
        this(alias, JOB_RUNTIMES);
    }

    private JobRuntimes(Name alias, Table<JobRuntimesRecord> aliased) {
        this(alias, aliased, null);
    }

    private JobRuntimes(Name alias, Table<JobRuntimesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> JobRuntimes(Table<O> child, ForeignKey<O, JobRuntimesRecord> key) {
        super(child, key, JOB_RUNTIMES);
    }

    @Override
    public Schema getSchema() {
        return TapisSys.TAPIS_SYS;
    }

    @Override
    public Identity<JobRuntimesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_JOB_RUNTIMES;
    }

    @Override
    public UniqueKey<JobRuntimesRecord> getPrimaryKey() {
        return Keys.JOB_RUNTIMES_PKEY;
    }

    @Override
    public List<UniqueKey<JobRuntimesRecord>> getKeys() {
        return Arrays.<UniqueKey<JobRuntimesRecord>>asList(Keys.JOB_RUNTIMES_PKEY);
    }

    @Override
    public List<ForeignKey<JobRuntimesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<JobRuntimesRecord, ?>>asList(Keys.JOB_RUNTIMES__JOB_RUNTIMES_SYSTEM_SEQ_ID_FKEY);
    }

    public Systems systems() {
        return new Systems(this, Keys.JOB_RUNTIMES__JOB_RUNTIMES_SYSTEM_SEQ_ID_FKEY);
    }

    @Override
    public JobRuntimes as(String alias) {
        return new JobRuntimes(DSL.name(alias), this);
    }

    @Override
    public JobRuntimes as(Name alias) {
        return new JobRuntimes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JobRuntimes rename(String name) {
        return new JobRuntimes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JobRuntimes rename(Name name) {
        return new JobRuntimes(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, RuntimeType, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
